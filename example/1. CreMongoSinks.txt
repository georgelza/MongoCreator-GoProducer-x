
-- Installing connector plugin into containerised CP Kafka
https://www.youtube.com/watch?v=18gDPSOH3wU

-- after adding.modifying Dockerfile - adding a plugin, redeploy using below.
-- docker compose up -d --build

-- List plugins installed 
curl -s localhost:8083/connector-plugins |jq '.[].class'

-- List connectors created
curl -X GET http://localhost:8083/connectors

-- List connector status
curl -s "http://mbp.local:8083/connectors?expand=info&expand=status" | \
       jq '. | to_entries[] | [ .value.info.type, .key, .value.status.connector.state,.value.status.tasks[].state,.value.info.config."connector.class"]|join(":|:")' | \
       column -s : -t| sed 's/\"//g'| sort


------------------------------------------------------------------------------
-- Post/Sink to Local Mongo container

  curl -X POST \
  -H "Content-Type: application/json" \
  --data '
      {"name": "mongo-local-salesbaskets-sink-p",
        "config": {
          "connector.class":"com.mongodb.kafka.connect.MongoSinkConnector",
          "connection.uri":"mongodb://mbp.local:27017/?directConnection=true",
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "org.apache.kafka.connect.json.JsonConverter",
          "value.converter.schemas.enable": false,
          "database":"MongoCom0",
          "collection":"P_salesbaskets",
          "topics":"P_salesbaskets"
          }
      }
      ' \
  http://localhost:8083/connectors -w "\n"


  curl -X POST \
  -H "Content-Type: application/json" \
  --data '
      {"name": "mongo-local-salespayments-sink-p",
        "config": {
          "connector.class":"com.mongodb.kafka.connect.MongoSinkConnector",
          "connection.uri":"mongodb://mbp.local:27017/?directConnection=true",
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "org.apache.kafka.connect.json.JsonConverter",
          "value.converter.schemas.enable": false,
          "database":"MongoCom0",
          "collection":"P_salespayments",
          "topics":"P_salespayments"
          }
      }
      ' \
  http://localhost:8083/connectors -w "\n"


------------------------------------------------------------------------------

-- Post/Sink to Atlas

curl -X POST \
  -H "Content-Type: application/json" \
  --data '
     { "name": "mongo-atlas-salesbaskets-sink-p",
        "config": {
          "connector.class": "com.mongodb.kafka.connect.MongoSinkConnector",
          "connection.uri": "mongodb+srv://adminuser:pass@cluster0.gqtneeXX.mongodb.net",
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "org.apache.kafka.connect.json.JsonConverter",
          "value.converter.schemas.enable": false,
          "database": "MongoCom0",
          "collection": "p_salesbaskets",
          "topics": "p_salesbaskets"
        }
      } 
      ' \
  http://localhost:8083/connectors -w "\n"

  
  curl -X POST \
  -H "Content-Type: application/json" \
  --data '
     { "name": "mongo-atlas-salespayments-sink-p",
        "config": {
          "connector.class": "com.mongodb.kafka.connect.MongoSinkConnector",
          "connection.uri": "mongodb+srv://adminuser:pass@cluster0.gqtneeXX.mongodb.net",
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "org.apache.kafka.connect.json.JsonConverter",
          "value.converter.schemas.enable": false,
          "database": "MongoCom0",
          "collection": "p_salespayments",
          "topics": "p_salespayments"
        }
      } 
      ' \
  http://localhost:8083/connectors -w "\n"
